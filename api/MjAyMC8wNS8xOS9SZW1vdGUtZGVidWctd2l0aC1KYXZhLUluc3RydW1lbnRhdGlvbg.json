{"title":"Remote debug with Java Instrumentation","date":"2020-05-19T05:13:32.000Z","date_formatted":{"ll":"May 19, 2020","L":"05/19/2020","MM-DD":"05-19"},"link":"2020/05/19/Remote-debug-with-Java-Instrumentation","tags":["Java"],"updated":"2021-03-01T13:33:12.202Z","content":"<p>最近在线上问题排障时，发现了内部框架实现的一个非常有用的功能，可以对生产机器上的代码实现对运行类的动态埋点（类似于断点，但并不会阻塞应用运行），并获取断点处的栈帧。</p>\n<p>翻看源码学习了下实现思路。</p>\n<h1 id=\"基本原理\">基本原理<a title=\"#基本原理\" href=\"#基本原理\"></a></h1>\n<p>利用 Java Agent 技术，通过 Java Instrumentation 接口编写 Agent 。JVM 启动时加载 Agent 。</p>\n<h1 id=\"加载-agent\">加载 Agent<a title=\"#加载-agent\" href=\"#加载-agent\"></a></h1>\n<ol>\n<li>\n<p>实现 Agent 启动方法 <code>premain</code> 或 <code>agentmain</code></p>\n</li>\n<li>\n<p>Agent 打成一个 jar 包，并在 MANIFEST.MF 中指定</p>\n</li>\n<li>\n<p>JVM 启动参数添加 <code>&quot;-javaagent:xxx.jar&quot;</code> 加载 Agent</p>\n</li>\n</ol>\n<h1 id=\"断点注册\">断点注册<a title=\"#断点注册\" href=\"#断点注册\"></a></h1>\n<p>实现一个 http 接口，接受断点相关的信息。</p>\n<p>调用 Instrumentation.retransformClasses 将断点所在的类重新加载。</p>\n<p>实现 ClassFileTransformer 的 transform 方法，在断点处添加记录栈帧的代码。</p>\n<p>通过 Instrumentation.addTransformer 添加到实现的 ClassFileTransformer</p>\n<h1 id=\"获取栈帧信息\">获取栈帧信息<a title=\"#获取栈帧信息\" href=\"#获取栈帧信息\"></a></h1>\n<p>实现一个 http 接口，返回断点处的栈帧。</p>\n<p>删除断点，并将记录的栈帧数据返回。</p>\n","prev":{"title":"Practical application of Cartesian product","link":"2020/08/17/Practical-application-of-Cartesian-product"},"next":{"title":"一些有趣的 Codewars JavaScript 题解","link":"2020/03/28/一些有趣的-Codewars-JavaScript-题解"},"plink":"https://syaki.github.io/2020/05/19/Remote-debug-with-Java-Instrumentation/","toc":[{"id":"基本原理","title":"基本原理","index":"1"},{"id":"加载-agent","title":"加载 Agent","index":"2"},{"id":"断点注册","title":"断点注册","index":"3"},{"id":"获取栈帧信息","title":"获取栈帧信息","index":"4"}],"copyright":{"author":"Syaki","link":"<a href=\"https://syaki.github.io/2020/05/19/Remote-debug-with-Java-Instrumentation/\" title=\"Remote debug with Java Instrumentation\">https://syaki.github.io/2020/05/19/Remote-debug-with-Java-Instrumentation/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)"}}